<?php
/**
 * @file
 * Include file for the services_auth_keys module.
 */

/**
 * Access callback for Services authentication.
 *
 * @see hook_services_authentication_info()
 */
function _services_auth_keys_authenticate_call($settings, $method, $args) {
  $keys['api_key'] = $settings['api_key']['identifier'];
  $keys['token'] = $settings['token']['identifier'];
  if ($settings['extra_key']['enabled']) {
    $keys['extra_key'] = $settings['extra_key']['identifier'];
  }
  foreach ($keys as $key => $id) {
    $http_id = 'HTTP_' . str_replace('-', '_', $id);
    $missing_keys = array();
    if (empty($_SERVER[$http_id])) {
      $missing_keys[] = $id;
    }
    else {
      $keys_values[$key] = $_SERVER[$http_id];
    }
  }
  // Return messages for missing
  if (!empty($missing_keys)) {
    return t('The service requires data for @keys', array('@keys' => implode(', ', $missing_keys)));
  }
  // Get the user id for the keys.
  $uid = services_auth_keys_load_by_keys($keys_values, TRUE);
  if (!$uid) {
    // Invalid keys.
    return t('The keys sent are invalid.');
  }
  else {
    global $user;
    $user = user_load($uid);
    // Check if the user exist.
    if (!$user) {
      // Invalid keys.
      return t('The user does not exist anymore.');
    }
    // Check if the user has access to the keys authentication.
    if (!user_access('services use keys authentication', $user)) {
      return t('Access denied.') . t('The user with those credentials does not have permissions');
    }
  }
}

/**
 * Default settings callback for Services authentication.
 *
 * @see hook_services_authentication_info()
 */
function _services_auth_keys_default_security_settings() {
  return array(
    'api_key' => array(
      'identifier' => 'API-KEY',
      'generate' => FALSE,
    ),
    'token' => array(
      'identifier' => 'TOKEN',
      'generate' => TRUE,
    ),
    'extra_key' => array(
      'enabled' => FALSE,
      'identifier' => 'EXTRA-KEY',
      'generate' => FALSE,
    ),
  );
}
/**
 * Settings callback for Services authentication.
 *
 * @see hook_services_authentication_info()
 */
function _services_auth_keys_security_settings($settings, &$form_state) {
  $form = array();
  global $user;

  // Keys settings.
  $form['api_key'] = array(
    '#type' => 'fieldset',
    '#title' => t('API Key'),
  );
  $form['api_key']['identifier'] = array(
    '#type' => 'textfield',
    '#title' => t('Identifier'),
    '#description' => t('What identifier do you want to use in the Service API for this key.'),
    '#default_value' => $settings['api_key']['identifier'],
  );
  $form['api_key']['generate'] = array(
    '#type' => 'checkbox',
    '#title' => t('Do you want this key to be generated by user?'),
    '#default_value' => $settings['api_key']['generate'],
  );

  $form['token'] = array(
    '#type' => 'fieldset',
    '#title' => t('Token'),
  );
  $form['token']['identifier'] = array(
    '#type' => 'textfield',
    '#title' => t('Identifier'),
    '#description' => t('What identifier do you want to use in the Service API for this key.'),
    '#default_value' => $settings['token']['identifier'],
  );
  $form['token']['generate'] = array(
    '#type' => 'checkbox',
    '#title' => t('Do you want this key to be generated by user?'),
    '#default_value' => $settings['token']['generate'],
  );

  $form['extra_key'] = array(
    '#type' => 'fieldset',
    '#title' => t('Extra Key'),
  );
  $form['extra_key']['enabled'] = array(
    '#type' => 'checkbox',
    '#title' => t('Do you need an extra key for authentication?'),
    '#default_value' => $settings['extra_key']['enabled'],
  );
  $form['extra_key']['identifier'] = array(
    '#type' => 'textfield',
    '#title' => t('Identifier'),
    '#description' => t('What identifier do you want to use in the Service API for this key.'),
    '#default_value' => $settings['extra_key']['identifier'],
    '#states' => array(
      'visible' => array(
        '#edit-services-auth-keys-extra-key-enabled' => array('checked' => TRUE),
      ),
    ),
  );
  $form['extra_key']['generate'] = array(
    '#type' => 'checkbox',
    '#title' => t('Do you want this key to be generated by user?'),
    '#default_value' => $settings['extra_key']['generate'],
    '#states' => array(
      'visible' => array(
        '#edit-services-auth-keys-extra-key-enabled' => array('checked' => TRUE),
      ),
    ),
  );

  return $form;
}
